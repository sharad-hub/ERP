@model ERP.Models.CreateSalesExecVM
<script src="~/Scripts/jquery-1.10.2.js"></script>
@{
    ViewBag.Title = "Create Sales Exec";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/jquery-1.10.2.js"></script>
 
@{
    IEnumerable<SelectListItem> Designisations = ViewBag.Designisations;
    IEnumerable<SelectListItem> countries = ViewBag.countries;
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2"> Confirm Password</label>
            <div class="col-md-10">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2"> Sales Executive Name</label>

            <div class="col-md-10">
                @Html.EditorFor(model => model.SalesExecutive.SalesExecName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SalesExecutive.SalesExecName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2"> Designation</label>
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.SalesExecutive.DesignationId, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.SalesExecutive.DesignationId, Designisations, "--Select--", new { @id = "ddlSalesExec", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SalesExecutive.DesignationId, "", new { @class = "text-danger" })
            </div>
        </div>       

        <div class="form-group">
            <label class="control-label col-md-2"> Mobile No</label>
            
            <div class="col-md-10">
                @Html.EditorFor(model => model.SalesExecutive.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SalesExecutive.MobileNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2"> Email Address</label>
           
            <div class="col-md-10">
                @Html.EditorFor(model => model.SalesExecutive.EmailId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SalesExecutive.EmailId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.ZoneId, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2"> Country</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SalesExecutive.CountryId, countries, "--Select--", new { @id = "ddlCountry", @class = "form-control" })
                @*@Html.ValidationMessageFor(model => model.ZoneId, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2"> Zone</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SalesExecutive.ZoneId, new List<SelectListItem>(), "--Select--", new { @id = "ddlZone", @class = "form-control" })

            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2"> State</label>
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.SalesExecutive.StateId, new List<SelectListItem>(), "--Select--", new { @id = "ddlState", @class = "form-control" })
                @*@Html.EditorFor(model => model.StateId, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2"> City </label>
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.SalesExecutive.CityId, new List<SelectListItem>(), "--Select--", new { @id = "ddlCity", @class = "form-control" })
                @*@Html.EditorFor(model => model.StateId, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })*@
            </div>
        </div>      

      

        <div class="form-group">
            @Html.LabelFor(model => model.SalesExecutive.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SalesExecutive.Status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SalesExecutive.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>
    $(document).ready(function () {
        $('#ddlCountry').change(function () {
            $.ajax({
                type: "post",
                url: "/Administration/Masters/GetZones",
                data: { countryId: $('#ddlCountry').val() },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    // var district = "<select id='ddlControllerName' class='form-control'>
                    var district = district + '<option value="">--Select--</option>';
                    for (var i = 0; i < data.length; i++) {
                        district = district + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    district = district + '</select>';
                    $('#ddlZone').html(district);
                    //$('#ControllerName').html(district);
                }
            });
        });

        $('#ddlZone').change(function () {
            $.ajax({
                type: "post",
                url: "/Administration/Masters/GetStates",
                data: { countryId: $('#ddlCountry').val(), zoneId: $('#ddlZone').val() },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    var items = "";
                    items = "<option value=''>--Choose--</option>";
                    $.each(data, function (i, item) {
                        items += "<option value=\"" + item.Value + "\">" + item.Text + "</option>";
                    });
                    $('#ddlState').html(items);
                }
            });
        });
        $('#ddlState').change(function () {
            $.ajax({
                type: "post",
                url: "/Administration/Masters/GetCities",
                data: { stateId: $('#ddlState').val(), zoneId: $('#ddlZone').val() },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    var items = "";
                    items = "<option value=''>--Choose--</option>";
                    $.each(data, function (i, item) {
                        items += "<option value=\"" + item.Value + "\">" + item.Text + "</option>";
                    });
                    $('#ddlCity').html(items);
                }
            });
        });

        
    });
</script>